{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uudiv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","get","findNweets","console","log","signOut","push","Navigation","display","justifyContent","to","marginRight","flexDirection","alignItems","fontSize","marginLeft","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"8RAcAA,IAASC,cATc,CACnBC,OAAQC,0CACRC,WAAYD,uCACZE,UAAWF,uBACXG,cAAeH,mCACfI,kBAAmBJ,gBACnBK,MAAOL,+CAKJ,IAAMM,EAAmBT,IACnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,U,OCwDxBC,EAxEE,WAEb,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAW,SAACC,GACd,MAEIA,EADAC,OAASC,EADb,EACaA,KAAMC,EADnB,EACmBA,MAEN,UAATD,EACAV,EAASW,GACO,aAATD,GACPR,EAAYS,IAIdC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBADO,UAILX,EAJK,gCAMQZ,EAAYwB,+BAA+BhB,EAAOE,GAN1D,sDASQV,EAAYyB,2BAA2BjB,EAAOE,GATtD,yEAYTK,EAAS,KAAMW,SAZN,0DAAH,sDAmBd,OACI,qCACI,uBAAML,SAAUA,EAAUM,UAAU,YAApC,UACI,uBACIR,KAAK,QACLS,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRV,MAAOZ,EACPQ,SAAUA,EACVW,UAAU,cAEd,uBACIR,KAAK,WACLS,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRV,MAAOV,EACPM,SAAUA,EACVW,UAAU,cAEd,uBACIC,KAAK,SACLR,MAAOR,EAAa,iBAAmB,SACvCe,UAAU,yBAEbb,GAAS,sBAAMa,UAAU,YAAhB,SAA6Bb,OAE3C,sBAAMiB,QA/BQ,kBAAMlB,GAAc,SAACmB,GAAD,OAAWA,MA+BfL,UAAU,aAAxC,SACSf,EAAa,UAAY,uBCxB/BqB,EAnCF,WACT,IAAMC,EAAa,uCAAG,WAAOjB,GAAP,iBAAAK,EAAA,4DAKL,YAHAH,EACTF,EADAC,OAASC,MAITgB,EAAW,IAAIpC,EAAiBE,KAAKmC,mBACrB,WAATjB,IACPgB,EAAW,IAAIpC,EAAiBE,KAAKoC,oBARvB,SAUCrC,EAAYsC,gBAAgBH,GAV7B,yDAAH,sDAanB,OACI,sBAAKR,UAAU,gBAAf,UACI,cAAC,IAAD,CACIY,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAACC,aAAc,MAE1B,cAAC,EAAD,IACA,sBAAKjB,UAAU,WAAf,UACI,yBAAQI,QAASG,EAAef,KAAK,SAASQ,UAAU,UAAxD,kCACyB,cAAC,IAAD,CAAiBY,KAAMM,SAEhD,yBAAQd,QAASG,EAAef,KAAK,SAASQ,UAAU,UAAxD,kCACyB,cAAC,IAAD,CAAiBY,KAAMO,gB,gBCwCjDC,EAzED,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QACtB,EAA8B1C,oBAAS,GAAvC,mBAAO2C,EAAP,KAAgBC,EAAhB,KACA,EAAgC5C,mBAASyC,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,uCAAG,sBAAAjC,EAAA,0DACPkC,OAAOC,QAAQ,qDADR,gCAGTvD,EAAUwD,IAAV,iBAAwBV,EAASW,KAAMC,SAH9B,UAIiB,KAA3BZ,EAASa,cAJC,gCAKJzD,EAAe0D,WAAWd,EAASa,eAAeD,SAL9C,2CAAH,qDAUbG,EAAgB,kBAAMZ,GAAW,SAACnB,GAAD,OAAWA,MAS5CX,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAEPrB,EAAUwD,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAACZ,KAAMC,IAF9C,OAGbF,GAAW,GAHE,2CAAH,sDAMd,OACI,qBAAKxB,UAAU,QAAf,SACKuB,EACG,qCACI,uBAAM7B,SAAUA,EAAUM,UAAU,sBAApC,UACI,uBACIX,SAnBP,SAACC,GACd,IACaG,EACTH,EADAC,OAASE,MAEbkC,EAAYlC,IAgBQA,MAAOiC,EACPvB,UAAQ,EACRD,YAAY,kBACZoC,WAAS,EACTtC,UAAU,cAEd,uBAAOC,KAAK,SAASR,MAAM,eAAeO,UAAU,eAExD,wBAAQI,QAASgC,EAAepC,UAAU,oBAA1C,uBAKJ,qCACI,6BAAKqB,EAASI,OACbJ,EAASa,eACN,qBAAKK,IAAKlB,EAASa,cAAeM,MAAM,OAAOC,OAAO,SAGzDnB,GACG,sBAAKtB,UAAU,iBAAf,UACI,sBAAMI,QAASwB,EAAf,SACI,cAAC,IAAD,CAAiBhB,KAAM8B,QAE3B,sBAAMtC,QAASgC,EAAf,SACI,cAAC,IAAD,CAAiBxB,KAAM+B,iB,QCqCxCC,EAjGM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,EAA0BjE,mBAAS,IAAnC,mBAAOkE,EAAP,KAAcC,EAAd,KACA,EAAoCnE,mBAAS,IAA7C,mBAAOoE,EAAP,KAAmBC,EAAnB,KAEMvD,EAAQ,uCAAG,WAAOJ,GAAP,mBAAAK,EAAA,yDACbL,EAAMM,iBACQ,KAAVkD,EAFS,oDAKTZ,EAAgB,GACD,KAAfc,EANS,wBAOHE,EAAgBzE,EAAe0E,MAChCC,MADiB,UACRP,EAAQQ,IADA,YACOC,gBARpB,SAScJ,EAAcK,UAAUP,EAAY,YATlD,cASHQ,EATG,iBAUaA,EAASL,IAAIM,iBAV1B,QAUTvB,EAVS,gCAYP3D,EAAUmF,WAAW,UAAUC,IAAI,CACrClC,KAAMqB,EACNc,UAAWC,KAAKC,MAChBC,UAAWlB,EAAQQ,IACnBnB,kBAhBS,QAkBba,EAAS,IACTE,EAAc,IAnBD,4CAAH,sDAiDd,OACI,uBAAMvD,SAAUA,EAAUM,UAAU,cAApC,UACI,sBAAKA,UAAU,0BAAf,UACI,uBACIA,UAAU,sBACVP,MAAOqD,EACPzD,SAjCC,SAACC,GACdA,EAAMM,iBACN,IACaH,EACTH,EADAC,OAASE,MAEbsD,EAAStD,IA6BGQ,KAAM,OACNC,YAAY,uBACZ8D,UAAW,MAEf,uBAAO/D,KAAK,SAASR,MAAM,SAASO,UAAU,2BAElD,wBAAOiE,QAAQ,cAAcjE,UAAU,sBAAvC,UACI,8CACA,cAAC,IAAD,CAAiBY,KAAMsD,SAE3B,uBACAlC,GAAG,cACC/B,KAAK,OACLkE,OAAO,UACP9E,SAxCS,SAACC,GAClB,IAGM8E,EADF9E,EADAC,OAAS8E,MAES,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAChB,IACoBC,EAChBD,EADAE,cAAgBD,OAEpBzB,EAAcyB,IAEfE,QAAQR,IACPE,EAAOO,cAAcT,IA4BjBpD,MAAO,CACH8D,QAAS,KAGZ9B,GACG,sBAAKhD,UAAU,0BAAf,UACI,qBACIuC,IAAKS,EACLhC,MAAO,CACH+D,gBAAiB/B,KAGzB,sBAAKhD,UAAU,qBAAqBI,QApC9B,kBAAM6C,EAAc,KAoC1B,UACA,0CACI,cAAC,IAAD,CAAiBrC,KAAMoE,gBC3DpCC,EA/BF,SAAC,GAAe,IAAdpC,EAAa,EAAbA,QACX,EAA4BjE,mBAAS,IAArC,mBAAOsG,EAAP,KAAeC,EAAf,KAcA,OAZAC,qBAAU,WACN7G,EAAUmF,WAAW,UAChB2B,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACb,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAACC,GAAD,oBAC/B3D,GAAI2D,EAAS3D,IACV2D,EAASC,WAEhBT,EAAUK,QAEf,IAGC,sBAAKxF,UAAU,YAAf,UACI,cAAC,EAAD,CAAc6C,QAASA,IACvB,qBAAK7B,MAAO,CAAE6E,UAAU,IAAxB,SACKX,EAAOQ,KAAI,SAAC5C,GAAD,OACR,cAAC,EAAD,CAEIzB,SAAUyB,EACVxB,QAASwB,EAAMiB,YAAclB,EAAQQ,KAFhCP,EAAMd,aC4DpB8D,EAjFC,SAAC,GAA4B,IAA3BjD,EAA0B,EAA1BA,QAASkD,EAAiB,EAAjBA,YACjBC,EAAUC,cAChB,EAA4BrH,mBAAS,IAArC,mBAAOsG,EAAP,KAAeC,EAAf,KACA,EAA4CvG,mBAASiE,EAAQqD,aAA7D,mBAAOC,EAAP,KAAuBC,EAAvB,KAcM1G,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBACFiD,EAAQqD,cAAgBC,EAFf,gCAGHtD,EAAQwD,cAAc,CAACH,YAAaC,IAHjC,OAITJ,IAJS,2CAAH,sDAQRO,EAAW,uCAAG,8BAAA3G,EAAA,sEACSpB,EAAUmF,WAAW,UACzC6C,MAAM,YAAa,KAAM1D,EAAQQ,KACjCgC,QAAQ,YAAa,OACrBmB,MAJW,OACVC,EADU,OAMVf,EAAMe,EAAWhB,KAAKC,KAAI,SAAC3D,GAAD,oBAC5BC,GAAID,EAAIC,IACLD,EAAI6D,WAEXT,EAAUO,GAEVgB,QAAQC,IAAIF,EAAWhB,KAAKC,KAAI,SAAC3D,GAAD,OAASA,EAAI6D,WAZ7B,2CAAH,qDAoBjB,OALAR,qBAAU,WACNkB,MAED,IAGC,sBAAKtG,UAAU,YAAf,UACI,uBAAMN,SAAUA,EAAUM,UAAU,cAApC,UACI,uBACIX,SAvCC,SAACC,GACd,IACaG,EACTH,EADAC,OAASE,MAEb2G,EAAkB3G,IAoCNQ,KAAK,OACLC,YAAY,eACZT,MAAO0G,EACP7D,WAAS,EACTtC,UAAU,cAEd,uBACIC,KAAK,SACLR,MAAM,iBACNO,UAAU,UACVgB,MAAO,CACH6E,UAAW,SAIvB,8BACKX,EAAOQ,KAAI,SAAC5C,GAAD,OACR,cAAC,EAAD,CAEIzB,SAAUyB,EACVxB,QAASwB,EAAMiB,YAAclB,EAAQQ,KAFhCP,EAAMd,SAMvB,sBAAMhC,UAAU,2BAA2BI,QArE7B,WAClB/B,EAAYuI,UACZZ,EAAQa,KAAK,MAmET,yBCjCGC,EAzCI,SAAC,GAAe,IAAdjE,EAAa,EAAbA,QACjB,OACI,8BACI,qBAAI7B,MAAO,CAAE+F,QAAS,OAAQC,eAAgB,SAAUnB,UAAW,IAAnE,UACI,6BACI,eAAC,IAAD,CAAMoB,GAAG,IAAIjG,MAAO,CAChBkG,YAAa,GACbH,QAAS,OACTI,cAAe,SACfC,WAAY,SACZC,SAAU,IALd,UAOI,cAAC,IAAD,CAAiBzG,KAAMC,IAAWC,MAAO,UAAWC,KAAK,OACzD,sBAAMC,MAAO,CAAE6E,UAAW,IAA1B,uBAKR,6BACI,eAAC,IAAD,CAAMoB,GAAI,WACVjG,MAAO,CACHsG,WAAW,GACXP,QAAS,OACTI,cAAe,SACfC,WAAY,SACZC,SAAU,IANd,UASI,cAAC,IAAD,CAAiBzG,KAAM2G,IAAQzG,MAAO,SAAUC,KAAK,OACrD,sBAAMC,MAAO,CAAE6E,UAAW,IAA1B,SACKhD,EAAQqD,YAAR,UACIrD,EAAQqD,YADZ,kBAEK,uBCKnBsB,EApCG,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,WAAY5E,EAA0B,EAA1BA,QAASkD,EAAiB,EAAjBA,YACrC,OACI,eAAC,IAAD,WACK0B,GAAc,cAAC,EAAD,CAAY5E,QAASA,IACpC,cAAC,IAAD,UACK4E,EACG,sBACIzG,MAAO,CACH0G,SAAU,IACVlF,MAAO,OACPmF,OAAQ,SACR9B,UAAW,GACXkB,QAAS,OACTC,eAAgB,UAPxB,UAUI,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAMhF,QAASA,MAEnB,cAAC,IAAD,CAAO+E,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,EAAD,CAAS9B,YAAaA,EAAalD,QAASA,SAIpD,cAAC,IAAD,CAAO+E,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,YCeTC,MA1Cf,WACI,MAAwBlJ,oBAAS,GAAjC,mBAAOmJ,EAAP,KAAaC,EAAb,KACA,EAA8BpJ,mBAAS,MAAvC,mBAAOiE,EAAP,KAAgBoF,EAAhB,KA0BA,OAfA7C,qBAAU,WACN/G,EAAY6J,oBAAmB,SAACC,GAExBF,IADAE,GACW,CACP9E,IAAK8E,EAAK9E,IACV6C,YAAaiC,EAAKjC,YAClBG,cAAe,SAAC+B,GAAD,OAAUD,EAAK9B,cAAc+B,MAKpDJ,GAAQ,QAEb,IAGC,mCACKD,EACG,cAAC,EAAD,CACIhC,YA5BI,WAChB,IAAMoC,EAAO9J,EAAYgK,YACzBJ,EAAW,CACP5E,IAAK8E,EAAK9E,IACV6C,YAAaiC,EAAKjC,YAClBG,cAAe,SAAC+B,GAAD,OAAUD,EAAK9B,cAAc+B,OAwBpCX,WAAY7C,QAAQ/B,GACpBA,QAASA,IAEb,qB,MCnChByF,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJ7C,SAAS8C,eAAe,W","file":"static/js/main.77a5f94c.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\"\nimport \"firebase/compat/firestore\"\nimport \"firebase/compat/storage\"\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import {useState} from \"react\";\nimport {authService} from \"fbase\";\n\nconst AuthForm = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {\n            target: {name, value},\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                //create newAccount\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                // log in\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    }\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\n                    className=\"authInput authSubmit\"\n                />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                    {newAccount ? \"Sign In\" : \"Create Account\"}\n                </span>\n        </>\n    );\n};\n\nexport default AuthForm;","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nimport {authService, firebaseInstance} from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: {name},\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n    };\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{marginBottom: 30}}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle}/>\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub}/>\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;\n","import {dbService, storageService} from \"fbase\";\nimport {useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTrash, faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n        if (ok) {\n           await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            if (nweetObj.attachmentUrl !== \"\") {\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n            }\n        }\n    }\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewNweet(value);\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet});\n        setEditing(false);\n    }\n\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\" >\n                        <input\n                            onChange={onChange}\n                            value={newNweet}\n                            required\n                            placeholder=\"Edit your nweet\"\n                            autoFocus\n                            className=\"formInput\"\n                        />\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\n                    </form>\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </button>\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && (\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/>\n                    )}\n\n                    {isOwner && (\n                        <div className=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash}/>\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt}/>\n                            </span>\n                        </div>\n\n                    )}\n                </>\n            )}\n\n        </div>\n    );\n};\n\nexport default Nweet;","import {dbService, storageService} from \"fbase\";\nimport {useState} from \"react\"\nimport {v4 as uudiv4} from \"uuid\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPlus, faTimes} from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({userObj}) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (nweet === \"\") {\n            return;\n        }\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService.ref()\n                .child(`${userObj.uid}/${uudiv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        await dbService.collection(\"nweets\").add({\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        });\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (event) => {\n        event.preventDefault();\n        const {\n            target: {value},\n        } = event;\n        setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n        const {\n            target: {files},\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: {result},\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        if(Boolean(theFile)){\n            reader.readAsDataURL(theFile);\n        }\n    };\n\n    const onClearAttachment = () => setAttachment(\"\");\n\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={nweet}\n                    onChange={onChange}\n                    type={\"text\"}\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus}/>\n            </label>\n            <input\n            id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n                {attachment && (\n                    <div className=\"factoryForm__attachment\">\n                        <img\n                            src={attachment}\n                            style={{\n                                backgroundImage: attachment,\n                            }}\n                        />\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                            <FontAwesomeIcon icon={faTimes}/>\n                        </div>\n                    </div>\n                )}\n        </form>\n    );\n};\n\nexport default NweetFactory;","import {dbService} from \"fbase\";\nimport {useEffect, useState} from \"react\"\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({userObj}) => {\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() => {\n        dbService.collection(\"nweets\")\n            .orderBy(\"createdAt\", \"desc\")\n            .onSnapshot((snapshot) => {\n            const newArray = snapshot.docs.map((document) => ({\n                id: document.id,\n                ...document.data(),\n            }))\n            setNweets(newArray);\n        })\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj}/>\n            <div style={{ marginTop:30}}>\n                {nweets.map((nweet) => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","import {authService, dbService} from \"fbase\";\nimport {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport Nweet from \"components/Nweet\";\n\nconst Profile = ({userObj, refreshUser}) => {\n    const history = useHistory();\n    const [nweets, setNweets] = useState([]);\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({displayName: newDisplayName});\n            refreshUser();\n        }\n    }\n\n    const getMyNweets = async () => {\n        const findNweets = await dbService.collection(\"nweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\", \"asc\")\n            .get();\n\n        const map = findNweets.docs.map((doc) => ({\n            id: doc.id,\n            ...doc.data(),\n        }));\n        setNweets(map);\n\n        console.log(findNweets.docs.map((doc) => doc.data()));\n    };\n\n    useEffect(() => {\n        getMyNweets();\n\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"Display name\"\n                    value={newDisplayName}\n                    autoFocus\n                    className=\"formInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <div>\n                {nweets.map((nweet) => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n};\n\nexport default Profile;","import {Link} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTwitter} from \"@fortawesome/free-brands-svg-icons\";\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({userObj}) => {\n    return (\n        <nav>\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n                <li>\n                    <Link to=\"/\" style={{\n                        marginRight: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }} >\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\"/>\n                        <span style={{ marginTop: 10}}>\n                            Home\n                        </span>\n                    </Link>\n                </li>\n                <li>\n                    <Link to={\"/profile\"}\n                    style={{\n                        marginLeft:10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }}\n                    >\n                        <FontAwesomeIcon icon={faUser} color={\"04AAFF\"} size=\"2x\"/>\n                        <span style={{ marginTop: 10}}>\n                            {userObj.displayName\n                            ? `${userObj.displayName}의 Profile`\n                                : \"Profile\"}\n                        </span>\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default Navigation;","import {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                            maxWidth: 890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj}/>\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile refreshUser={refreshUser} userObj={userObj}/>\n                        </Route>\n                    </div>\n                ) : (\n                    <Route exact path=\"/\">\n                        <Auth/>\n                    </Route>\n                )}\n                {/*\n                <Redirect from=\"*\" to=\"/\"/>\n                */}\n            </Switch>\n        </Router>\n    );\n}\n\nexport default AppRouter;\n","import {useEffect, useState} from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj({\n            uid: user.uid,\n            displayName: user.displayName,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    uid: user.uid,\n                    displayName: user.displayName,\n                    updateProfile: (args) => user.updateProfile(args),\n                 });\n            } else {\n                setUserObj(false);\n            }\n            setInit(true);\n        });\n    }, []);\n\n    return (\n        <>\n            {init ? (\n                <AppRouter\n                    refreshUser={refreshUser}\n                    isLoggedIn={Boolean(userObj)}\n                    userObj={userObj}/>\n            ) : (\n                \"initializing...\"\n            )}\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}